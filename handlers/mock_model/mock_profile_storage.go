// Code generated by MockGen. DO NOT EDIT.
// Source: profile_storage.go

// Package mock_mock_model is a generated GoMock package.
package mock_model

import (
	model "project/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProfileRepository is a mock of ProfileRepository interface.
type MockProfileRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProfileRepositoryMockRecorder
}

// MockProfileRepositoryMockRecorder is the mock recorder for MockProfileRepository.
type MockProfileRepositoryMockRecorder struct {
	mock *MockProfileRepository
}

// NewMockProfileRepository creates a new mock instance.
func NewMockProfileRepository(ctrl *gomock.Controller) *MockProfileRepository {
	mock := &MockProfileRepository{ctrl: ctrl}
	mock.recorder = &MockProfileRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileRepository) EXPECT() *MockProfileRepositoryMockRecorder {
	return m.recorder
}

// CheckProfile mocks base method.
func (m *MockProfileRepository) CheckProfile(login string) (*model.Profile, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckProfile", login)
	ret0, _ := ret[0].(*model.Profile)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// CheckProfile indicates an expected call of CheckProfile.
func (mr *MockProfileRepositoryMockRecorder) CheckProfile(login interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckProfile", reflect.TypeOf((*MockProfileRepository)(nil).CheckProfile), login)
}

// DeleteProfile mocks base method.
func (m *MockProfileRepository) DeleteProfile(login string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProfile", login)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteProfile indicates an expected call of DeleteProfile.
func (mr *MockProfileRepositoryMockRecorder) DeleteProfile(login interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfile", reflect.TypeOf((*MockProfileRepository)(nil).DeleteProfile), login)
}

// GetProfile mocks base method.
func (m *MockProfileRepository) GetProfile(id uint) (*model.Profile, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile", id)
	ret0, _ := ret[0].(*model.Profile)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockProfileRepositoryMockRecorder) GetProfile(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockProfileRepository)(nil).GetProfile), id)
}

// GetProfiles mocks base method.
func (m *MockProfileRepository) GetProfiles() ([]model.Profile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfiles")
	ret0, _ := ret[0].([]model.Profile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProfiles indicates an expected call of GetProfiles.
func (mr *MockProfileRepositoryMockRecorder) GetProfiles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfiles", reflect.TypeOf((*MockProfileRepository)(nil).GetProfiles))
}

// RegisterNewProfile mocks base method.
func (m *MockProfileRepository) RegisterNewProfile(user *model.Profile) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterNewProfile", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterNewProfile indicates an expected call of RegisterNewProfile.
func (mr *MockProfileRepositoryMockRecorder) RegisterNewProfile(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterNewProfile", reflect.TypeOf((*MockProfileRepository)(nil).RegisterNewProfile), user)
}
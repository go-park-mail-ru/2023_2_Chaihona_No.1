// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: posts.proto

package posts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TagGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TagGRPC) Reset() {
	*x = TagGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagGRPC) ProtoMessage() {}

func (x *TagGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagGRPC.ProtoReflect.Descriptor instead.
func (*TagGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{0}
}

func (x *TagGRPC) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TagGRPC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TagsGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagsMap map[int32]*TagGRPC `protobuf:"bytes,1,rep,name=tags_map,json=tagsMap,proto3" json:"tags_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TagsGRPC) Reset() {
	*x = TagsGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsGRPC) ProtoMessage() {}

func (x *TagsGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsGRPC.ProtoReflect.Descriptor instead.
func (*TagsGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{1}
}

func (x *TagsGRPC) GetTagsMap() map[int32]*TagGRPC {
	if x != nil {
		return x.TagsMap
	}
	return nil
}

type CommentGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PostId uint32 `protobuf:"varint,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Text   string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CommentGRPC) Reset() {
	*x = CommentGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentGRPC) ProtoMessage() {}

func (x *CommentGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentGRPC.ProtoReflect.Descriptor instead.
func (*CommentGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{2}
}

func (x *CommentGRPC) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentGRPC) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentGRPC) GetPostId() uint32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CommentGRPC) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CommentsGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentsMap map[int32]*CommentGRPC `protobuf:"bytes,1,rep,name=comments_map,json=commentsMap,proto3" json:"comments_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CommentsGRPC) Reset() {
	*x = CommentsGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsGRPC) ProtoMessage() {}

func (x *CommentsGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsGRPC.ProtoReflect.Descriptor instead.
func (*CommentsGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{3}
}

func (x *CommentsGRPC) GetCommentsMap() map[int32]*CommentGRPC {
	if x != nil {
		return x.CommentsMap
	}
	return nil
}

type UserGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname                   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Login                      string `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Password                   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	UserType                   string `protobuf:"bytes,5,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	Status                     string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Avatar                     string `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Background                 string `protobuf:"bytes,8,opt,name=background,proto3" json:"background,omitempty"`
	Description                string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt                  string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                  string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsAuthor                   bool   `protobuf:"varint,12,opt,name=is_author,json=isAuthor,proto3" json:"is_author,omitempty"`
	Subscribers                uint32 `protobuf:"varint,13,opt,name=subscribers,proto3" json:"subscribers,omitempty"`
	IsFollowed                 bool   `protobuf:"varint,14,opt,name=is_followed,json=isFollowed,proto3" json:"is_followed,omitempty"`
	VisiterSubscriptionLevelId int32  `protobuf:"varint,15,opt,name=visiter_subscription_level_id,json=visiterSubscriptionLevelId,proto3" json:"visiter_subscription_level_id,omitempty"`
}

func (x *UserGRPC) Reset() {
	*x = UserGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGRPC) ProtoMessage() {}

func (x *UserGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGRPC.ProtoReflect.Descriptor instead.
func (*UserGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{4}
}

func (x *UserGRPC) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserGRPC) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserGRPC) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UserGRPC) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserGRPC) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *UserGRPC) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserGRPC) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserGRPC) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *UserGRPC) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserGRPC) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserGRPC) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UserGRPC) GetIsAuthor() bool {
	if x != nil {
		return x.IsAuthor
	}
	return false
}

func (x *UserGRPC) GetSubscribers() uint32 {
	if x != nil {
		return x.Subscribers
	}
	return 0
}

func (x *UserGRPC) GetIsFollowed() bool {
	if x != nil {
		return x.IsFollowed
	}
	return false
}

func (x *UserGRPC) GetVisiterSubscriptionLevelId() int32 {
	if x != nil {
		return x.VisiterSubscriptionLevelId
	}
	return 0
}

type PostGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId      uint32  `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	HasAccess     bool    `protobuf:"varint,3,opt,name=has_access,json=hasAccess,proto3" json:"has_access,omitempty"`
	Reason        string  `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Payment       float32 `protobuf:"fixed32,5,opt,name=payment,proto3" json:"payment,omitempty"`
	Currency      string  `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	MinSubLevel   uint32  `protobuf:"varint,7,opt,name=min_sub_level,json=minSubLevel,proto3" json:"min_sub_level,omitempty"`
	MinSubLevelId uint32  `protobuf:"varint,8,opt,name=min_sub_level_id,json=minSubLevelId,proto3" json:"min_sub_level_id,omitempty"`
	CreationDate  string  `protobuf:"bytes,9,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	// google.protobuf.Timestamp created_at = 10;
	UpdatedAt string        `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Header    string        `protobuf:"bytes,11,opt,name=header,proto3" json:"header,omitempty"`
	Body      string        `protobuf:"bytes,12,opt,name=body,proto3" json:"body,omitempty"`
	Likes     uint32        `protobuf:"varint,13,opt,name=likes,proto3" json:"likes,omitempty"`
	Comments  *CommentsGRPC `protobuf:"bytes,14,opt,name=comments,proto3" json:"comments,omitempty"`
	Tags      *TagsGRPC     `protobuf:"bytes,15,opt,name=tags,proto3" json:"tags,omitempty"`
	Attaches  string        `protobuf:"bytes,16,opt,name=attaches,proto3" json:"attaches,omitempty"`
	IsLiked   bool          `protobuf:"varint,17,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
}

func (x *PostGRPC) Reset() {
	*x = PostGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostGRPC) ProtoMessage() {}

func (x *PostGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostGRPC.ProtoReflect.Descriptor instead.
func (*PostGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{5}
}

func (x *PostGRPC) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostGRPC) GetAuthorId() uint32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *PostGRPC) GetHasAccess() bool {
	if x != nil {
		return x.HasAccess
	}
	return false
}

func (x *PostGRPC) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PostGRPC) GetPayment() float32 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *PostGRPC) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PostGRPC) GetMinSubLevel() uint32 {
	if x != nil {
		return x.MinSubLevel
	}
	return 0
}

func (x *PostGRPC) GetMinSubLevelId() uint32 {
	if x != nil {
		return x.MinSubLevelId
	}
	return 0
}

func (x *PostGRPC) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *PostGRPC) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PostGRPC) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *PostGRPC) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PostGRPC) GetLikes() uint32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *PostGRPC) GetComments() *CommentsGRPC {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *PostGRPC) GetTags() *TagsGRPC {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PostGRPC) GetAttaches() string {
	if x != nil {
		return x.Attaches
	}
	return ""
}

func (x *PostGRPC) GetIsLiked() bool {
	if x != nil {
		return x.IsLiked
	}
	return false
}

type PostsMapGRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts map[int32]*PostGRPC `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PostsMapGRPC) Reset() {
	*x = PostsMapGRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsMapGRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsMapGRPC) ProtoMessage() {}

func (x *PostsMapGRPC) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsMapGRPC.ProtoReflect.Descriptor instead.
func (*PostsMapGRPC) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{6}
}

func (x *PostsMapGRPC) GetPosts() map[int32]*PostGRPC {
	if x != nil {
		return x.Posts
	}
	return nil
}

type UInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UInt) Reset() {
	*x = UInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt) ProtoMessage() {}

func (x *UInt) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt.ProtoReflect.Descriptor instead.
func (*UInt) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{7}
}

func (x *UInt) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Int struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I int32 `protobuf:"varint,1,opt,name=i,proto3" json:"i,omitempty"`
}

func (x *Int) Reset() {
	*x = Int{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int) ProtoMessage() {}

func (x *Int) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int.ProtoReflect.Descriptor instead.
func (*Int) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{8}
}

func (x *Int) GetI() int32 {
	if x != nil {
		return x.I
	}
	return 0
}

type AuthorSubscriberId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorID     uint32 `protobuf:"varint,1,opt,name=authorID,proto3" json:"authorID,omitempty"`
	SubscriberID uint32 `protobuf:"varint,2,opt,name=subscriberID,proto3" json:"subscriberID,omitempty"`
}

func (x *AuthorSubscriberId) Reset() {
	*x = AuthorSubscriberId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorSubscriberId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorSubscriberId) ProtoMessage() {}

func (x *AuthorSubscriberId) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorSubscriberId.ProtoReflect.Descriptor instead.
func (*AuthorSubscriberId) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorSubscriberId) GetAuthorID() uint32 {
	if x != nil {
		return x.AuthorID
	}
	return 0
}

func (x *AuthorSubscriberId) GetSubscriberID() uint32 {
	if x != nil {
		return x.SubscriberID
	}
	return 0
}

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dummy bool `protobuf:"varint,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_posts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_posts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_posts_proto_rawDescGZIP(), []int{10}
}

func (x *Nothing) GetDummy() bool {
	if x != nil {
		return x.Dummy
	}
	return false
}

var File_posts_proto protoreflect.FileDescriptor

var file_posts_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x47, 0x52, 0x50, 0x43, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x67, 0x73, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x37, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x47,
	0x52, 0x50, 0x43, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x74, 0x61, 0x67, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x4a, 0x0a, 0x0c, 0x54, 0x61, 0x67,
	0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x47, 0x52, 0x50, 0x43, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x52, 0x50, 0x43, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x52, 0x50, 0x43, 0x12, 0x47, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x61, 0x70, 0x1a, 0x52, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x52, 0x50, 0x43, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x52, 0x50, 0x43, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x41, 0x0a, 0x1d, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x22, 0x84, 0x04, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27,
	0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x2f, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x47, 0x52, 0x50, 0x43, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0c, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x47, 0x52, 0x50, 0x43, 0x12, 0x34, 0x0a, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x47, 0x52, 0x50, 0x43, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x1a, 0x49, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50,
	0x43, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x16, 0x0a, 0x04,
	0x55, 0x49, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x03, 0x49, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x69, 0x22, 0x54, 0x0a, 0x12, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x1f, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x75,
	0x6d, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x75, 0x6d, 0x6d, 0x79,
	0x32, 0x88, 0x04, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x31, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x74, 0x78, 0x12, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x0a, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x74, 0x78, 0x12, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x74, 0x78, 0x12, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x0e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x43, 0x74, 0x78, 0x12, 0x0b, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x43, 0x74, 0x78, 0x12, 0x19,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x43, 0x74, 0x78, 0x12, 0x19, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43,
	0x74, 0x78, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x13, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x4d, 0x61, 0x70, 0x47, 0x52,
	0x50, 0x43, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x74, 0x78, 0x12, 0x0b, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x4d, 0x61, 0x70, 0x47, 0x52, 0x50, 0x43, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x3b, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_posts_proto_rawDescOnce sync.Once
	file_posts_proto_rawDescData = file_posts_proto_rawDesc
)

func file_posts_proto_rawDescGZIP() []byte {
	file_posts_proto_rawDescOnce.Do(func() {
		file_posts_proto_rawDescData = protoimpl.X.CompressGZIP(file_posts_proto_rawDescData)
	})
	return file_posts_proto_rawDescData
}

var file_posts_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_posts_proto_goTypes = []interface{}{
	(*TagGRPC)(nil),            // 0: posts.TagGRPC
	(*TagsGRPC)(nil),           // 1: posts.TagsGRPC
	(*CommentGRPC)(nil),        // 2: posts.CommentGRPC
	(*CommentsGRPC)(nil),       // 3: posts.CommentsGRPC
	(*UserGRPC)(nil),           // 4: posts.UserGRPC
	(*PostGRPC)(nil),           // 5: posts.PostGRPC
	(*PostsMapGRPC)(nil),       // 6: posts.PostsMapGRPC
	(*UInt)(nil),               // 7: posts.UInt
	(*Int)(nil),                // 8: posts.Int
	(*AuthorSubscriberId)(nil), // 9: posts.AuthorSubscriberId
	(*Nothing)(nil),            // 10: posts.Nothing
	nil,                        // 11: posts.TagsGRPC.TagsMapEntry
	nil,                        // 12: posts.CommentsGRPC.CommentsMapEntry
	nil,                        // 13: posts.PostsMapGRPC.PostsEntry
}
var file_posts_proto_depIdxs = []int32{
	11, // 0: posts.TagsGRPC.tags_map:type_name -> posts.TagsGRPC.TagsMapEntry
	12, // 1: posts.CommentsGRPC.comments_map:type_name -> posts.CommentsGRPC.CommentsMapEntry
	3,  // 2: posts.PostGRPC.comments:type_name -> posts.CommentsGRPC
	1,  // 3: posts.PostGRPC.tags:type_name -> posts.TagsGRPC
	13, // 4: posts.PostsMapGRPC.posts:type_name -> posts.PostsMapGRPC.PostsEntry
	0,  // 5: posts.TagsGRPC.TagsMapEntry.value:type_name -> posts.TagGRPC
	2,  // 6: posts.CommentsGRPC.CommentsMapEntry.value:type_name -> posts.CommentGRPC
	5,  // 7: posts.PostsMapGRPC.PostsEntry.value:type_name -> posts.PostGRPC
	5,  // 8: posts.PostsService.CreateNewPostCtx:input_type -> posts.PostGRPC
	7,  // 9: posts.PostsService.DeletePostCtx:input_type -> posts.UInt
	5,  // 10: posts.PostsService.ChangePostCtx:input_type -> posts.PostGRPC
	7,  // 11: posts.PostsService.GetPostByIdCtx:input_type -> posts.UInt
	9,  // 12: posts.PostsService.GetPostsByAuthorIdForStrangerCtx:input_type -> posts.AuthorSubscriberId
	9,  // 13: posts.PostsService.GetOwnPostsByAuthorIdCtx:input_type -> posts.AuthorSubscriberId
	9,  // 14: posts.PostsService.GetPostsByAuthorIdForFollowerCtx:input_type -> posts.AuthorSubscriberId
	7,  // 15: posts.PostsService.GetUsersFeedCtx:input_type -> posts.UInt
	8,  // 16: posts.PostsService.CreateNewPostCtx:output_type -> posts.Int
	10, // 17: posts.PostsService.DeletePostCtx:output_type -> posts.Nothing
	10, // 18: posts.PostsService.ChangePostCtx:output_type -> posts.Nothing
	5,  // 19: posts.PostsService.GetPostByIdCtx:output_type -> posts.PostGRPC
	6,  // 20: posts.PostsService.GetPostsByAuthorIdForStrangerCtx:output_type -> posts.PostsMapGRPC
	6,  // 21: posts.PostsService.GetOwnPostsByAuthorIdCtx:output_type -> posts.PostsMapGRPC
	6,  // 22: posts.PostsService.GetPostsByAuthorIdForFollowerCtx:output_type -> posts.PostsMapGRPC
	6,  // 23: posts.PostsService.GetUsersFeedCtx:output_type -> posts.PostsMapGRPC
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_posts_proto_init() }
func file_posts_proto_init() {
	if File_posts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_posts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsMapGRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorSubscriberId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_posts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nothing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_posts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_posts_proto_goTypes,
		DependencyIndexes: file_posts_proto_depIdxs,
		MessageInfos:      file_posts_proto_msgTypes,
	}.Build()
	File_posts_proto = out.File
	file_posts_proto_rawDesc = nil
	file_posts_proto_goTypes = nil
	file_posts_proto_depIdxs = nil
}
